#!/bin/bash
#wgetseed $profondeurDossier $critere1 $critere2 $dossier
#TODO pb de parsing avec &#32; IFS et eval ??
#server adress here
#site="ftp://dns.adress.org//data"
site="ftp://cluster1m.seedbox.fr//data/complete/"
triHTML="sed 's/%20/ /g' | sed 's/%C3%A9/é/g' | sed 's/%C3%B4/ô/g' | sed 's/%5B/[/g' | sed 's/%26/\&/g' | sed 's/%5D/]/g' | sed 's/(/\\(/g' | sed 's/)/\\)/g' | sed 's/%C3%A0/à/g' | sed 's/%C3%A8/è/g' | sed 's/%E2%80%99/ /g' | sed 's/%C3%AA/ê/g' | sed 's/%2C/,/g' | sed 's/%C3%B5/õ/g' | sed 's/%C3%A7/ç/g' | sed 's/%2B/+/g' | sed 's/%C3%BB/û/g' | sed 's/%40/@/g'" 
triHTMLInverse="sed 's/\&\#32 /%20/g' | sed 's/ /%20/g' | sed 's/\&\#32\;/%20/g'"
chemin="/tmp/.wgetseed"
resultatsSeed="$chemin/resultatsSeed"
listeFilms="$chemin/listeFilms"
nomsNoHtml="$chemin/nomsNoHtml"
resultatsSeedComplet="$chemin/resultatsSeedComplet"
resultatsSeedDossier="$chemin/resultatsSeedDossier"
typeConnexion="--secure-protocol=TLSv1_3"
ecraser=false

#TODO creer l'arborescence
#TODO Téléchargement automatique lorsque plusieurs dossiers dans les résultats

effacer(){
    rm -r "$chemin" > /dev/null 2>&1
}

test(){
    echo ""; echo ""$'\e[1;36m'"i : $1 | crit1 : $2 | crit2 : $3 | dlAuto : $4 | dossier : $5 "$'\e[0m'""
}

telecharger(){
    #$1 dossier #$2 nom 
    nomSysteme=$(echo "$2" | eval $triHTML)
    telechargement=true
    # Verification si le fichier existe déjà    
    for liste in $(ls); do
        if [ "$liste" == "$nomSysteme" ]; then
            if [ ! $ecraser ]; then
                read -u 2 -p "Le fichier $nomSysteme existe déjà, voulez-vous l'écraser ? : " reponse
            fi
            if [[ $ecraser || $reponse =~ ^[YyOo]$ ]]; then
                rm "$nomSysteme"
                break
            else
                telechargement=false
            fi
        fi
    done
    if [ "$telechargement" = true ]; then
        wget $site$1$2 $typeConnexion
    fi
}


wgetseed()
{   echo "";
    test $1 $2 $3 $4 $5 $6
    iteration=$1
    critere1=$2
    critere2=$3
    dlAuto=$4
    dossier=$5
    fichier=$6
    colonne=$((5+$iteration))

    if [ "$critere1" == "." -a "$iteration" -ne 0 ]; then
        critere1=""
    fi
    if [ "$critere2" == "." -a "$iteration" -ne 0 ]; then
        critere2=""
    fi
    
    # echo ""; echo "fichier = $fichier";
    # echo "dossier = $dossier"; echo "";
    # Requete
    wget -O - $site$dossier $typeConnexion --quiet > "$listeFilms$fichier"
    cat "$listeFilms$fichier" | eval $triHTMLInverse > "$resultatsSeedComplet$fichier"
    cat "$resultatsSeedComplet$fichier" > "$listeFilms$fichier"
    # Récupérer les lignes qui concernent les dossiers et fichiers
    if [ "$critere1" == "" ]; then
        cat "$listeFilms$fichier" | grep "Fichier\|Répertoire" > "$resultatsSeedComplet$fichier"
    else
        cat "$listeFilms$fichier" | grep -i -E "$critere1.*$critere2" | grep "Fichier\|Répertoire" > "$resultatsSeedComplet$fichier"
    fi
    # Récupérer les noms de dossiers ou fichiers
    cat "$resultatsSeedComplet$fichier" | cut -d "/" -f $colonne | cut -d "\"" -f 1 > "$resultatsSeed$fichier"
    # Parsing % characters
    cat "$resultatsSeed$fichier" | eval $triHTML > "$nomsNoHtml$fichier"
    nbLignes=$(cat "$resultatsSeed$fichier" | wc -l)
    # Affichage résultats recherche
    echo ""; cat "$nomsNoHtml$fichier"
    
    if [[ $nbLignes == 1 ]]; then
        if [ $(cat $resultatsSeedComplet$fichier  | cut -d "/" -f 1 | grep "Fichier") ]; then
            nom=$(cat "$resultatsSeed$fichier")
            nomNoHtml=$(echo "$nom" | eval $triHTML)
            if $dlAuto; then
                telecharger $dossier $nom
            else 
                read -p "Voulez-vous télécharger \"$nomNoHtml\" : " -n 1 -r
                echo ""
                if [[ $REPLY =~ ^[YyOo]$ ]]; then
                    telecharger $dossier $nom
                fi
            fi
        elif [ $(cat $resultatsSeedComplet$fichier | cut -d "/" -f 1 | grep "Répertoire") ]; then
            nom=$(cat $resultatsSeedComplet$fichier | cut -d "/" -f $colonne | cut -d "\"" -f 1)
            nomNoHtml=$(echo "$nom" | eval $triHTML)
            critere1="."
            critere2="."
            # echo "resultat parse nom = $nom" # todo
            if [ "$dossier" == "" ]; then
                dossier="$nom/"
            else
                dossier="$dossier$nom/"
            fi
            wgetseed $((1+$iteration)) $critere1 $critere2 $dlAuto $dossier
        fi
    elif [ $nbLignes -eq 0 ]; then
        echo  "Pas de résultat pour "$'\e[1;31m'"\"$critere1 $critere2\""$'\e[0m'
    else
        if $dlAuto; then
            while read ligne; do
                nom=$(echo "$ligne" | cut -d "/" -f $colonne | cut -d "\"" -f 1)
                critere1="."
                critere2="."
                # echo "resultat parse nom = $nom" # todo
                if [ $(echo "$ligne" | grep "Répertoire") ]; then
                    if [ "$dossier" == "" ]; then
                        dossier="$nom/"
                    else
                        dossier="$dossier$nom/"
                    fi
                    wgetseed $((1+$iteration)) $critere1 $critere2 $dlAuto $dossier
                else
                wgetseed $iteration $nom $critere2 $dlAuto $dossier $nom
                fi
            done < "$resultatsSeedComplet$fichier"
        else
            echo ""; read -p "Voulez-vous tout télécharger ? : " -n 1 -r
            if [[ $REPLY =~ ^[YyOo]$ ]]; then
                if [ "$critere1" == "" ]; then
                        critere1="."
                fi
                if [ "$critere2" == "" ]; then
                        critere2="."
                fi
                wgetseed $iteration $critere1 $critere2 true $dossier
            else
                echo ""; read -p "Saisissez le 2eme critère parmi la liste : "
                for crit2 in $REPLY; do
                    crit2=$(echo "$crit2" | eval $triHTMLInverse)
                    if [ "$critere1" == "" ]; then
                        critere1="."
                    fi
                    wgetseed $iteration $crit2 $critere1 $dlAuto $dossier
                done 
            fi
        fi
    fi
}
SAVEIFS=$IFS
IFS=$(echo -en "\b\n~")
effacer
mkdir $chemin
read -p "Voulez-vous écraser automatiquement le.s fichier.s ? : " -n 1 -r; echo ""
if [[ $REPLY =~ ^[YyOo]$ ]]; then
    ecraser=true
fi
recherche=$1
if [ "$recherche" == "" ]; then
    recherche="."
fi
wgetseed 1 $recherche "." false
effacer
IFS=$SAVEIFS